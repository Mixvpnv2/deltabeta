local Outlines = true
local OutlineColoring = Color3.fromRGB(255, 255, 255)
local OutlineFill = false
local FillOpacity = 1
local FillColoring = Color3.fromRGB(255, 255, 255)

local NameTags = true
local TextFont = Enum.Font.RobotoMono
local NameColor = Color3.fromRGB(255, 255, 255)
local NamePositioning = false

local Folder = Instance.new("Folder", game:GetService("CoreGui"))
Folder.Name = ""

AddOutline = function(Character)
   local Highlight = Instance.new("Highlight", Folder)
   
   Highlight.OutlineColor = OutlineColoring
   Highlight.Adornee = Character
   
   if OutlineFill == true then
       Highlight.FillColor = FillColoring
       Highlight.FillTransparency = FillOpacity
   else
       Highlight.FillTransparency = 1
   end
end

AddNameTag = function(Character)
   local BGui = Instance.new("BillboardGui", Folder)
   local Frame = Instance.new("Frame", BGui)
   local TextLabel = Instance.new("TextLabel", Frame)
   
   BGui.Adornee = Character:WaitForChild("Head")
   BGui.StudsOffset = Vector3.new(0, 3, 0)
   BGui.AlwaysOnTop = true
   
   BGui.Size = UDim2.new(4, 0, 0.5, 0)
   Frame.Size = UDim2.new(1, 0, 1, 0)
   TextLabel.Size = UDim2.new(1, 0, 1, 0)
   
   Frame.BackgroundTransparency = 1
   TextLabel.BackgroundTransparency = 1
   
   TextLabel.Text = Character.Name
   TextLabel.Font = TextFont
   TextLabel.TextColor3 = NameColor
   TextLabel.TextScaled = NamePositioning
end

for i, v in ipairs(game:GetService("Players"):GetPlayers()) do
   if v ~= game:GetService("Players").LocalPlayer then
       v.CharacterAdded:Connect(function(Character)
           if Outlines == true then
               AddOutline(Character)
           end
           if NameTags == true then
               AddNameTag(Character)
           end
       end)
       
       if v.Character then
           if Outlines == true then
               AddOutline(v.Character)
           end
           if NameTags == true then
               AddNameTag(v.Character)
           end
       end
   end
end

game:GetService("Players").PlayerAdded:Connect(function(Player)
   Player.CharacterAdded:Connect(function(Character)
       if Outlines == true then
           AddOutline(Character)
       end
       if NameTags == true then
           AddNameTag(Character)
       end
   end)
end)

local CHEAT_CLIENT = {} do
    do
        CHEAT_CLIENT.player = game.Players.LocalPlayer
        CHEAT_CLIENT.camera = game.Workspace.CurrentCamera
        CHEAT_CLIENT.mouse = CHEAT_CLIENT.player:GetMouse()
    end
 
    do
        function CHEAT_CLIENT:get_target()
            local current_target = nil
            local maximum_distance = math.huge
    
            for i,v in pairs(game.Players:GetPlayers()) do
                if v == game.Players.LocalPlayer then continue end
                if v.Character and v.Character:FindFirstChild("HumanoidRootPart") then
                    local position, on_screen = CHEAT_CLIENT.camera:WorldToViewportPoint(v.Character.HumanoidRootPart.Position)
                    if not on_screen then continue end
                    local distance = (Vector2.new(position.X, position.Y - game.GuiService:GetGuiInset(game.GuiService).Y) - Vector2.new(CHEAT_CLIENT.mouse.X, CHEAT_CLIENT.mouse.Y)).Magnitude
                    if distance > maximum_distance then continue end
                    current_target = v
                    maximum_distance = distance
                end
            end
    
            return current_target
        end
    
        function CHEAT_CLIENT:predict_velocity(target_part, projectile_speed)
                local velocity = target_part.Velocity
    
                local distance = (CHEAT_CLIENT.camera.CFrame.p - target_part.CFrame.p).Magnitude
                local time_to_hit = (distance / projectile_speed)
    
                local predicted_position = target_part.CFrame.p + (velocity * time_to_hit)
                local delta = (predicted_position - target_part.CFrame.p).Magnitude
    
                local final_projectile_speed = projectile_speed - 0.013 * projectile_speed ^ 2 * time_to_hit ^ 2
    
                time_to_hit += (delta / final_projectile_speed)
    
                return target_part.CFrame.p + (velocity * time_to_hit)
        end
    
        function CHEAT_CLIENT:predict_drop(target_part, projectile_speed, projectile_drop)
                local distance = (CHEAT_CLIENT.camera.CFrame.p - target_part.CFrame.p).Magnitude
                local time_to_hit = (distance / projectile_speed)
    
                local final_projectile_speed = projectile_speed - 0.013 * projectile_speed ^ 2 * time_to_hit ^ 2
                time_to_hit += (distance / final_projectile_speed)
    
                local drop_timing = projectile_drop * time_to_hit ^ 2
    
                if not tostring(drop_timing):find("nan") then
                    return drop_timing
                end
                return 0
        end
    
        function CHEAT_CLIENT:get_bullet_atribute(attribute)
            local attribute_value = nil
            local status = game.ReplicatedStorage.Players[CHEAT_CLIENT.player.Name]:FindFirstChild("Status")
            if status then
                local equipped_tool = status.GameplayVariables.EquippedTool.Value
                if equipped_tool then
                    local inventory_equipped_tool = game.ReplicatedStorage.Players[CHEAT_CLIENT.player.Name].Inventory:FindFirstChild(tostring(equipped_tool))
                    if inventory_equipped_tool then
                        local mag = inventory_equipped_tool.Attachments:FindFirstChild("Magazine") and inventory_equipped_tool.Attachments:FindFirstChild("Magazine"):FindFirstChildOfClass("StringValue") and inventory_equipped_tool.Attachments:FindFirstChild("Magazine"):FindFirstChildOfClass("StringValue"):FindFirstChild("ItemProperties").LoadedAmmo or inventory_equipped_tool.ItemProperties:FindFirstChild("LoadedAmmo")
                        if mag then
                            local first_bullet_type = mag:FindFirstChild("1")
                            if first_bullet_type then
                                attribute_value = game.ReplicatedStorage.AmmoTypes[first_bullet_type:GetAttribute("AmmoType")]:GetAttribute(attribute)
                            end
                        end
                    end
                end
            end
            return attribute_value
        end
    end
 end
 
 local silent_aim_hook; silent_aim_hook = hookfunction(require(game.ReplicatedStorage.Modules.FPS.Bullet).CreateBullet, function(...)
    local args = {...}
 
    if CHEAT_CLIENT:get_target() then
        local attribute_velocity = CHEAT_CLIENT:get_bullet_atribute("MuzzleVelocity")
        local attribute_drop = CHEAT_CLIENT:get_bullet_atribute("ProjectileDrop")
        local target_part = CHEAT_CLIENT:get_target() and CHEAT_CLIENT:get_target().Character:FindFirstChild("Head")
        if attribute_velocity and attribute_drop and target_part then
            args[9] = {CFrame = CFrame.new(args[9].CFrame.p, CHEAT_CLIENT:predict_velocity(target_part, attribute_velocity) + Vector3.new(0, CHEAT_CLIENT:predict_drop(target_part, attribute_velocity, attribute_drop), 0))}
        end
    end
 
    return silent_aim_hook(unpack(args))
 end)

local function a(b)
    for _,c in ipairs(b:GetDescendants()) do
        if c:IsA("\66\97\115\101\80\97\114\116") then
            c.Material=Enum.Material.ForceField
            c.Color=Color3.new(1,0,0)
        end
    end
end

local function d(b)
    for _,e in ipairs(b:GetDescendants()) do
        if e:IsA("\83\117\114\102\97\99\101\65\112\112\101\97\114\97\110\99\101") then
            e:Destroy()
        end
    end
end

while true do
    local f=game.Workspace:FindFirstChild("\67\97\109\101\114\97") and game.Workspace.Camera:FindFirstChild("\86\105\101\119\77\111\100\101\108")
    local g=f and f:FindFirstChild("\73\116\101\109")

    if f then
        a(f)
    else
        warn("\86\105\101\119\77\111\100\101\108\32\110\111\116\32\102\111\117\110\100\32\105\110\32\87\111\114\107\115\112\97\99\101!")
    end

    if g then
        a(g)
        d(g)
    else
        warn("\73\116\101\109\32\110\111\116\32\102\111\117\110\100\32\105\110\32\86\105\101\119\77\111\100\101\108!")
    end

    wait(1)
end
